name: 'Deploy Container Instance'
description: 'Deploy the Container Instance in Azure'
inputs:
  credentials:
    description: 'The Azure credentials to log in'
    required: true
  resource-group-name:
    description: 'The resource group name that the container will be created'
    required: true
  environment:
    description: 'The environment that the container will be created'
    required: true
  location:
    description: 'The region/location where the container is hosted'
    required: true
  container-name:
    description: 'The application name for the container'
    required: true
  registry-name:
    description: 'The registry name to pull the image from'
    required: true
  image-tag:
    description: 'The image tag to pull the image from'
    required: true
  port:
    description: 'The port for the container'
    required: true
  environment-variables:
    description: 'The environment variables for the application'
    required: true
  runs-health-check:
    description: 'If it should runs the healthcheck for the API or not'
    required: false
    default: 'false'
runs:
  using: "composite"
  steps:
    - name: Azure Login
      uses: Azure/login@v1.4.6
      with:
        creds: ${{ inputs.credentials }}

    - name: Deploy Container Instance
      uses: azure/cli@v1
      with:
        azcliversion: latest
        inlineScript: |
          az container create \
            --resource-group ${{ inputs.resource-group-name }} \
            --assign-identity \
            --environment-variables ${{ inputs.environment-variables }} \
            --memory 0.5 --cpu 1 --ports ${{ inputs.port }} \
            --ip-address Public \
            --dns-name-label ${{ inputs.container-name }}-${{ inputs.environment }} \
            --registry-login-server ${{ inputs.registry-name }}.azurecr.io \
            --registry-username "anonymous" \
            --registry-password "anonymous" \
            --name ${{ inputs.container-name }}-${{ inputs.environment }}-container \
            --image ${{ inputs.registry-name }}.azurecr.io/${{ inputs.container-name }}:${{ inputs.image-tag }}
    
    - name: Health Check API
      if: ${{ inputs.runs-health-check == 'true' }}
      shell: bash
      run: |
          RESPONSE=$(curl -s "http://${{ inputs.container-name }}-${{ inputs.environment }}.${{ inputs.location }}.azurecontainer.io:${{ inputs.port }}/health")
          
          if [[ "$RESPONSE" == *"Healthy"* ]]; then
            echo "API is Healthy"
          else
            echo "API is not Healthy"
            exit 1
          fi