name: Test Workflow

on:
  workflow_dispatch:

env:
  ENVIRONMENT: prod
  REGISTRY_ENVIRONMENT: prod

jobs:
  build-apps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Build Apps
        uses: ./.github/actions/build-apps
        with:
          dotnet-version: '6.0.x'

  run-unit-and-integration-tests:
    needs: [ build-apps ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Run Unit and Integration Tests
        uses: ./.github/actions/run-unit-and-integration-tests
    
  ui-tests:
    needs: [ run-unit-and-integration-tests ]
    uses: ./.github/workflows/99-ui-test-workflow.yml
    secrets: inherit
    
  # Generate Artifacts
  push-auth-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Push Auth Image
        uses: ./.github/actions/push-image
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          image-name: ${{ vars.APP_NAME}}-auth-api
          image-tag: latest
          registry-name: acr${{ vars.APP_NAME }}${{ env.REGISTRY_ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
          docker-file-path: ./src/api/TechNews.Auth.Api/Dockerfile .
  
  push-core-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Push Core Image
        uses: ./.github/actions/push-image
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          image-name: ${{ vars.APP_NAME}}-core-api
          image-tag: latest
          registry-name: acr${{ vars.APP_NAME }}${{ env.REGISTRY_ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
          docker-file-path: ./src/api/TechNews.Core.Api/Dockerfile .
  
  push-web-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Push Web Image
        uses: ./.github/actions/push-image
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          image-name: ${{ vars.APP_NAME}}-web
          image-tag: latest
          registry-name: acr${{ vars.APP_NAME }}${{ env.REGISTRY_ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
          docker-file-path: ./src/web/TechNews.Web/Dockerfile .

  # Deploy
  deploy-auth-container:
    needs: [ push-auth-image, push-core-image, push-web-image ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Deploy TechNews Auth Container
        uses: ./.github/actions/deploy-container-instance
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          location: ${{ vars.AZURE_RESOURCES_LOCATION }}
          container-name: ${{ vars.APP_NAME}}-auth-api
          registry-name: acr${{ vars.APP_NAME }}${{ env.REGISTRY_ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
          image-tag: latest
          port: ${{ vars.AUTH_PORT }}
          runs-health-check: true
          environment-variables: TECHNEWS_AUTH_API_DATABASE_CONNECTION_STRING="Server=tcp:dbs-${{ vars.APP_NAME }}-${{ env.ENVIRONMENT }}-${{ vars.AZURE_RESOURCES_LOCATION }}.database.windows.net,1433;Initial Catalog=TechNewsAuth;Persist Security Info=False;User ID=${{ secrets.ADMIN_LOGIN }};Password=${{ secrets.ADMIN_PASSWORD }};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;" AZURE_KEY_VAULT_URL="https://kv${{ vars.APP_NAME }}${{ env.ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}.vault.azure.net/" ASPNETCORE_URLS="http://+:${{ vars.AUTH_PORT }} " TOKEN_EXPIRATION_IN_MINUTES="${{ vars.TOKEN_EXPIRATION_IN_MINUTES }}" KEY_ROTATOR_EXECUTION_IN_MINUTES="${{ vars.KEY_ROTATOR_EXECUTION_IN_MINUTES }}" KEY_CREATION_SIZE_IN_BITS="${{ vars.KEY_CREATION_SIZE_IN_BITS }}" KEY_EXPIRATION_IN_DAYS="${{ vars.KEY_EXPIRATION_IN_DAYS }}" CRYPTOGRAPHIC_ALGORITHM="${{ vars.CRYPTOGRAPHIC_ALGORITHM }}"
      
  deploy-core-container:
    needs: [ push-auth-image, push-core-image, push-web-image ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Deploy TechNews Core Container
        uses: ./.github/actions/deploy-container-instance
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          location: ${{ vars.AZURE_RESOURCES_LOCATION }}
          container-name: ${{ vars.APP_NAME}}-core-api
          registry-name: acr${{ vars.APP_NAME }}${{ env.REGISTRY_ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
          image-tag: latest
          port: ${{ vars.CORE_PORT }}
          runs-health-check: true
          environment-variables: TECHNEWS_CORE_API_DATABASE_CONNECTION_STRING="Server=tcp:dbs-${{ vars.APP_NAME }}-${{ env.ENVIRONMENT }}-${{ vars.AZURE_RESOURCES_LOCATION }}.database.windows.net,1433;Initial Catalog=TechNews;Persist Security Info=False;User ID=${{ secrets.ADMIN_LOGIN }};Password=${{ secrets.ADMIN_PASSWORD }};MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;" ASPNETCORE_URLS="http://+:${{ vars.CORE_PORT }}" TECHNEWS_CORE_API_AUTH_JWKS_URL="http://${{ vars.APP_NAME}}-auth-api-${{ env.ENVIRONMENT }}.${{ vars.AZURE_RESOURCES_LOCATION }}.azurecontainer.io:${{ vars.AUTH_PORT }}/jwks"

  deploy-web-container:
    needs: [ deploy-auth-container, deploy-core-container ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Deploy TechNews Web Container
        uses: ./.github/actions/deploy-container-instance
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          environment: ${{ env.ENVIRONMENT }}
          location: ${{ vars.AZURE_RESOURCES_LOCATION }}
          container-name: ${{ vars.APP_NAME}}-web
          registry-name: acr${{ vars.APP_NAME }}${{ env.REGISTRY_ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
          image-tag: latest
          port: ${{ vars.WEB_PORT }}
          environment-variables: TECHNEWS_APP_API_AUTH_URL="http://${{ vars.APP_NAME}}-auth-api-${{ env.ENVIRONMENT }}.${{ vars.AZURE_RESOURCES_LOCATION }}.azurecontainer.io:${{ vars.AUTH_PORT }}" TECHNEWS_APP_API_CORE_URL="http://${{ vars.APP_NAME}}-core-api-${{ env.ENVIRONMENT }}.${{ vars.AZURE_RESOURCES_LOCATION }}.azurecontainer.io:${{ vars.CORE_PORT }}" ASPNETCORE_URLS="http://+:${{ vars.WEB_PORT }}"
