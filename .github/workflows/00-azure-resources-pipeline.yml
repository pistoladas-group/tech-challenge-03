name: Create Azure Resources Workflow

on:
  workflow_dispatch:

env:
  ENVIRONMENT: prod

jobs:
  # create-resource-group:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Actions
  #       uses: actions/checkout@v4

  #     - name: Create Resource Group
  #       uses: ./.github/actions/create-resource-group
  #       with:
  #         credentials: ${{ secrets.AZURE_CREDENTIALS }}
  #         resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
  #         location: ${{ vars.AZURE_RESOURCES_LOCATION }}

  # deploy-container-registry:
  #   needs: [ create-resource-group ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Actions
  #       uses: actions/checkout@v4

  #     - name: Deploy Container Registry
  #       uses: ./.github/actions/deploy-container-registry
  #       with:
  #         credentials: ${{ secrets.AZURE_CREDENTIALS }}
  #         subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
  #         resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
  #         environment: ${{ env.ENVIRONMENT }}
  #         resource-name: acr${{ vars.APP_NAME }}${{ env.ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
  #         location: ${{ vars.AZURE_RESOURCES_LOCATION }}

  # deploy-key-vault:
  #   needs: [ create-resource-group ]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout Actions
  #       uses: actions/checkout@v4

  #     - name: Deploy Key Vault
  #       uses: ./.github/actions/deploy-key-vault
  #       with:
  #         credentials: ${{ secrets.AZURE_CREDENTIALS }}
  #         subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
  #         resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
  #         environment: ${{ env.ENVIRONMENT }}
  #         resource-name: kv${{ vars.APP_NAME }}${{ env.ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
  #         location: ${{ vars.AZURE_RESOURCES_LOCATION }}
  #         database-admin-login: ${{ secrets.ADMIN_LOGIN }}
  #         database-admin-pass: ${{ secrets.ADMIN_PASSWORD }}
  #         database-client-ip-value: ${{ secrets.CLIENT_IP }}

  deploy-auth-database:
    #needs: [ create-resource-group ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Actions
        uses: actions/checkout@v4

      - name: Deploy TechNewsAuth Database
        uses: ./.github/actions/deploy-database
        with:
          credentials: ${{ secrets.AZURE_CREDENTIALS }}
          subscription-id: ${{ secrets.SUBSCRIPTION_ID }}
          resource-group-name: ${{ vars.RESOURCE_GROUP_NAME }}
          database-name: TechNewsAuth
          server-name: dbs-${{ vars.APP_NAME }}-${{ env.ENVIRONMENT }}-${{ vars.AZURE_RESOURCES_LOCATION }}
          key-vault-name: kv${{ vars.APP_NAME }}${{ env.ENVIRONMENT }}${{ vars.AZURE_RESOURCES_LOCATION }}
          environment: ${{ env.ENVIRONMENT }}
          location: ${{ vars.AZURE_RESOURCES_LOCATION }}
          admin-login: ${{ secrets.ADMIN_LOGIN }}
          admin-password: ${{ secrets.ADMIN_PASSWORD }}
          client-ip: ${{ secrets.CLIENT_IP }}

    # - name: Deploy TechNewsAuth Database Template
    #   uses: azure/arm-deploy@v1
    #   with:
    #     subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
    #     template: ./azure/arm-templates/database/template.json
    #     parameters: ./azure/arm-templates/database/parameters-TechNewsAuth.json

    # - name: Deploy TechNews Database Template
    #   uses: azure/arm-deploy@v1
    #   with:
    #     subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
    #     resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
    #     template: ./azure/arm-templates/database/template.json
    #     parameters: ./azure/arm-templates/database/parameters-TechNews.json